/**
 * Test on User account creation in Firebase Authentication
 * and test user document that is generated by background function.
 */
import "mocha";
import { expect } from "chai";
import * as admin from "firebase-admin";
import { FirebaseAppInitializer } from "../firebase-app-initializer";
import { TestLibrary } from "../test.library.class";
import { User } from "../../src/classes/user/user.class";

// Initialize firebase
new FirebaseAppInitializer();

describe("User create in Firebase Authentication and update through Background Function", () => {
  it("Create a user account and delete", async () => {
    // Create a user account in Firebase authentication
    const user = await TestLibrary.createUser();
    const re = await TestLibrary.waitUntil(() => User.exists(user.uid));

    // If user document has successfully generated by `onUserCreate` background function,
    // it will be true. Otherwise, it will be false.
    expect(re).equals(true);

    // Get the generated user documents.
    const userDoc = await User.get(user.uid);

    // Do some tests
    expect(userDoc).to.be.an("object").to.not.have.property("first_name");
    expect(userDoc.uid).equals(user.uid);

    // Delete the user account in Firebase Authentication 
    await admin.auth().deleteUser(user.uid)
    const nonExistent = await TestLibrary.waitUntil(() => User.notExists(user.uid));
    expect(nonExistent).equals(false);
  });
});
